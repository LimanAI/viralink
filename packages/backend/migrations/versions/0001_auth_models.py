"""auth_models

Revision ID: 0001
Revises:
Create Date: 2025-04-25 19:18:51.064885

"""

from collections.abc import Sequence
from typing import Union

import sqlalchemy as sa
import sqlalchemy_utils.types
from alembic import op

# revision identifiers, used by Alembic.
revision: str = "0001"
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "auth_users",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column(
            "email", sqlalchemy_utils.types.email.EmailType(length=255), nullable=True
        ),
        sa.Column("username", sa.String(length=64), nullable=False),
        sa.Column("fullname", sa.String(length=128), nullable=False),
        sa.Column("password", sa.LargeBinary(length=1137), nullable=True),
        sa.Column("is_active", sa.Boolean(), nullable=False),
        sa.Column("is_admin", sa.Boolean(), nullable=False),
        sa.Column("is_verified", sa.Boolean(), nullable=False),
        sa.Column("created_at", sa.TIMESTAMP(timezone=True), nullable=False),
        sa.Column("updated_at", sa.TIMESTAMP(timezone=True), nullable=True),
        sa.Column("deleted_at", sa.TIMESTAMP(timezone=True), nullable=True),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_auth_users")),
    )
    op.create_index(op.f("ix_auth_users_email"), "auth_users", ["email"], unique=True)
    op.create_table(
        "tgbot_tg_users",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("tg_id", sa.BigInteger(), nullable=False),
        sa.Column("username", sa.String(length=64), nullable=False),
        sa.Column("first_name", sa.String(length=64), nullable=False),
        sa.Column("last_name", sa.String(length=64), nullable=False),
        sa.Column("phone", sa.String(length=64), nullable=False),
        sa.Column("language_code", sa.String(length=8), nullable=False),
        sa.Column("is_bot", sa.Boolean(), nullable=False),
        sa.Column("is_blocked", sa.Boolean(), nullable=False),
        sa.Column("user", sa.UUID(), nullable=False),
        sa.Column("created_at", sa.TIMESTAMP(timezone=True), nullable=False),
        sa.Column("updated_at", sa.TIMESTAMP(timezone=True), nullable=True),
        sa.Column("deleted_at", sa.TIMESTAMP(timezone=True), nullable=True),
        sa.ForeignKeyConstraint(
            ["user"], ["auth_users.id"], name=op.f("fk_tgbot_tg_users_auth_users__user")
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_tgbot_tg_users")),
    )
    op.create_index(
        op.f("ix_tgbot_tg_users_tg_id"), "tgbot_tg_users", ["tg_id"], unique=True
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f("ix_tgbot_tg_users_tg_id"), table_name="tgbot_tg_users")
    op.drop_table("tgbot_tg_users")
    op.drop_index(op.f("ix_auth_users_email"), table_name="auth_users")
    op.drop_table("auth_users")
    # ### end Alembic commands ###
