"""tg_accounts

Revision ID: 0002
Revises: 0001
Create Date: 2025-05-04 15:44:17.890853

"""

from collections.abc import Sequence
from typing import Union

import sqlalchemy as sa
import sqlalchemy_utils.types
from alembic import op
from sqlalchemy.dialects import postgresql
from sqlalchemy.types import Text

from app.models.base import ErrorSchema, PydanticJSON

# revision identifiers, used by Alembic.
revision: str = "0002"
down_revision: Union[str, None] = "0001"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    sa.Enum(
        "initial", "sent_code", "active", "disabled", name="tg_account_status"
    ).create(op.get_bind())  # type: ignore[no-untyped-call]
    op.create_table(
        "tg_accounts",
        sa.Column("phone_number", sa.String(length=32), nullable=False),
        sa.Column("api_id", sa.BigInteger(), nullable=False),
        sa.Column(
            "api_hash",
            sqlalchemy_utils.types.encrypted.encrypted_type.StringEncryptedType(),
            nullable=True,
        ),
        sa.Column("phone_code_hash", sa.String(length=32), nullable=False),
        sa.Column(
            "session_string",
            sqlalchemy_utils.types.encrypted.encrypted_type.StringEncryptedType(),
            nullable=True,
        ),
        sa.Column("is_active", sa.Boolean(), nullable=True),
        sa.Column(
            "status",
            postgresql.ENUM(
                "initial",
                "sent_code",
                "active",
                "disabled",
                name="tg_account_status",
                create_type=False,
            ),
            nullable=False,
        ),
        sa.Column("status_changed_at", sa.TIMESTAMP(timezone=True), nullable=True),
        sa.Column(
            "status_error",
            PydanticJSON(ErrorSchema, none_as_null=True, astext_type=Text()),
            nullable=True,
        ),
        sa.Column("status_errored_at", sa.TIMESTAMP(timezone=True), nullable=True),
        sa.Column(
            "watched_channels_count", sa.Integer(), server_default="0", nullable=False
        ),
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("created_at", sa.TIMESTAMP(timezone=True), nullable=False),
        sa.Column("updated_at", sa.TIMESTAMP(timezone=True), nullable=True),
        sa.Column("deleted_at", sa.TIMESTAMP(timezone=True), nullable=True),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_tg_accounts")),
    )
    op.create_index(
        op.f("ix_tg_accounts_api_id"), "tg_accounts", ["api_id"], unique=True
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f("ix_tg_accounts_api_id"), table_name="tg_accounts")
    op.drop_table("tg_accounts")
    sa.Enum(
        "initial", "sent_code", "active", "disabled", name="tg_account_status"
    ).drop(op.get_bind())  # type: ignore[no-untyped-call]
    # ### end Alembic commands ###
