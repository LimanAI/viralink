"""add_credits

Revision ID: 0005
Revises: 0004
Create Date: 2025-05-14 23:53:43.184216

"""

from collections.abc import Sequence
from typing import Union

import sqlalchemy as sa
import sqlalchemy_utils.types
from alembic import op
from sqlalchemy.dialects import postgresql

import app.models.base

# revision identifiers, used by Alembic.
revision: str = "0005"
down_revision: Union[str, None] = "0004"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    sa.Enum("locked", name="tg_user_credits_transaction_status").create(op.get_bind())  # type: ignore[no-untyped-call]
    op.create_table(
        "tg_user_credits_transactions",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("amount", sa.BigInteger(), nullable=False),
        sa.Column(
            "status",
            postgresql.ENUM(
                "locked", name="tg_user_credits_transaction_status", create_type=False
            ),
            nullable=False,
        ),
        sa.Column("tg_user_id", sa.BigInteger(), nullable=True),
        sa.Column("created_at", sa.TIMESTAMP(timezone=True), nullable=False),
        sa.Column("updated_at", sa.TIMESTAMP(timezone=True), nullable=True),
        sa.Column("deleted_at", sa.TIMESTAMP(timezone=True), nullable=True),
        sa.CheckConstraint(
            "amount > 0",
            name=op.f(
                "ck_tg_user_credits_transactions__tg_user_credits_transactions__amount_positive"
            ),
        ),
        sa.ForeignKeyConstraint(
            ["tg_user_id"],
            ["tgbot_tg_users.tg_id"],
            name=op.f("fk_tg_user_credits_transactions_tgbot_tg_users__tg_user_id"),
            ondelete="SET NULL",
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_tg_user_credits_transactions")),
    )
    op.create_index(
        "ix_tg_user_credits_transactions__deleted_at",
        "tg_user_credits_transactions",
        ["deleted_at"],
        unique=False,
    )
    op.create_index(
        "ix_tg_user_credits_transactions__hanging_transactions",
        "tg_user_credits_transactions",
        ["created_at", "deleted_at", "status"],
        unique=False,
    )
    op.create_index(
        op.f("ix_tg_user_credits_transactions_tg_user_id"),
        "tg_user_credits_transactions",
        ["tg_user_id"],
        unique=False,
    )
    op.add_column(
        "tgbot_tg_users",
        sa.Column("credits_balance", sa.Integer(), server_default="0", nullable=False),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column("tgbot_tg_users", "credits_balance")
    op.drop_index(
        op.f("ix_tg_user_credits_transactions_tg_user_id"),
        table_name="tg_user_credits_transactions",
    )
    op.drop_index(
        "ix_tg_user_credits_transactions__hanging_transactions",
        table_name="tg_user_credits_transactions",
    )
    op.drop_index(
        "ix_tg_user_credits_transactions__deleted_at",
        table_name="tg_user_credits_transactions",
    )
    op.drop_table("tg_user_credits_transactions")
    sa.Enum("locked", name="tg_user_credits_transaction_status").drop(op.get_bind())  # type: ignore[no-untyped-call]
    # ### end Alembic commands ###
